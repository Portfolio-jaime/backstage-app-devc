apiVersion: v1
kind: ServiceAccount
metadata:
  name: backstage
  namespace: backstage
  labels:
    app: backstage
    component: backend
  annotations:
    # AWS IRSA (IAM Roles for Service Accounts)
    eks.amazonaws.com/role-arn: arn:aws:iam::YOUR_ACCOUNT_ID:role/BackstageServiceRole

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backstage-reader
  labels:
    app: backstage
rules:
# Kubernetes plugin permissions
- apiGroups: [""]
  resources: 
    - pods
    - pods/log
    - pods/status
    - services
    - services/status
    - endpoints
    - persistentvolumes
    - persistentvolumeclaims
    - configmaps
    - limitranges
    - resourcequotas
    - namespaces
    - nodes
  verbs: ["get", "list", "watch"]

- apiGroups: ["apps"]
  resources:
    - deployments
    - deployments/status
    - deployments/scale
    - replicasets
    - replicasets/status
    - statefulsets
    - statefulsets/status
    - daemonsets
    - daemonsets/status
  verbs: ["get", "list", "watch"]

- apiGroups: ["extensions"]
  resources:
    - ingresses
    - ingresses/status
  verbs: ["get", "list", "watch"]

- apiGroups: ["networking.k8s.io"]
  resources:
    - ingresses
    - ingresses/status
    - networkpolicies
  verbs: ["get", "list", "watch"]

- apiGroups: ["autoscaling"]
  resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
  verbs: ["get", "list", "watch"]

- apiGroups: ["batch"]
  resources:
    - jobs
    - jobs/status
    - cronjobs
    - cronjobs/status
  verbs: ["get", "list", "watch"]

- apiGroups: ["metrics.k8s.io"]
  resources:
    - pods
    - nodes
  verbs: ["get", "list"]

# Custom Resource Definitions (if needed)
- apiGroups: ["argoproj.io"]
  resources:
    - applications
    - appprojects
  verbs: ["get", "list", "watch"]

# Istio resources (if using service mesh)
- apiGroups: ["networking.istio.io"]
  resources:
    - virtualservices
    - destinationrules
    - gateways
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backstage-reader
  labels:
    app: backstage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: backstage-reader
subjects:
- kind: ServiceAccount
  name: backstage
  namespace: backstage

---
# Additional role for namespace-specific operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: backstage
  name: backstage-namespace-admin
  labels:
    app: backstage
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apps", "extensions"]
  resources: ["*"]
  verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backstage-namespace-admin
  namespace: backstage
  labels:
    app: backstage
subjects:
- kind: ServiceAccount
  name: backstage
  namespace: backstage
roleRef:
  kind: Role
  name: backstage-namespace-admin
  apiGroup: rbac.authorization.k8s.io